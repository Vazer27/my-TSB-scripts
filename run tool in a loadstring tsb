local tool = Instance.new("Tool")
tool.Name = "Run Tool"

tool.Parent = game.Players.LocalPlayer.Backpack
tool.RequiresHandle = false

local moving = false
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")
local runService = game:GetService("RunService")
local movementSpeed = 125

local customAnimation = Instance.new("Animation")
customAnimation.AnimationId = "rbxassetid://18897115785"
local defaultAnimationTracks = {}

local function isR6(character)
return character:FindFirstChild("Torso") and character:FindFirstChild("Left Arm") and character:FindFirstChild("Right Arm")
end

local function moveForward()
while moving do
local forwardDirection = humanoidRootPart.CFrame.LookVector
humanoidRootPart.Velocity = forwardDirection * movementSpeed
runService.Stepped:Wait()
end
end

local function stopDefaultAnimations(animator)
for _, track in ipairs(animator:GetPlayingAnimationTracks()) do
table.insert(defaultAnimationTracks, track)
track:Stop()
end
end

local function resumeDefaultAnimations()
for _, track in ipairs(defaultAnimationTracks) do
track:Play()
end
defaultAnimationTracks = {}
end

tool.Equipped:Connect(function()
if not isR6(character) then
warn("This tool only works with R6 characters.")
return
end

moving = true

local animator = humanoid:FindFirstChildOfClass("Animator") or humanoid:WaitForChild("Animator")
if not animator then
warn("Animator not found.")
return
end

stopDefaultAnimations(animator)

local customAnimationTrack = animator:LoadAnimation(customAnimation)
if customAnimationTrack then
customAnimationTrack:Play()
else
warn("Failed to load custom animation.")
end

moveForward()
end)

tool.Unequipped:Connect(function()
moving = false

local animator = humanoid:FindFirstChildOfClass("Animator")
if animator then
for _, track in ipairs(animator:GetPlayingAnimationTracks()) do
if track.Animation.AnimationId == customAnimation.AnimationId then
track:Stop()
end
end
resumeDefaultAnimations()
end
end)
